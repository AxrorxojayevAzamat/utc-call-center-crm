@using CallCenterCRM.Interfaces
@model IEnumerable<CallCenterCRM.Models.Answer>
@inject IApplicationService applicationService
@inject IUserService userService

@{
    string typeIdentityId = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier";
    string userIdentityId = GetUserClaim(typeIdentityId);

    var isAuthenticated = User.Identity.IsAuthenticated;

    string GetUserClaim(string type)
    {
        return User.Identities.First().Claims.First(c => c.Type == type).Value;
    }
}

<h1>Ответы</h1>

<p>
    <a asp-action="Create" class="btn btn-success btn-rounded">Создать новое</a>
</p>
<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ResponsiblePerson)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Executor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ResponseLetter)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegisterNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Result)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Conclusion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ResponsiblePerson)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Executor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ResponseLetter)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegisterNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Result)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Conclusion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author.Title)
                    </td>
                    <td>
                        <span class="app-status btn-rounded btn-inverse-@applicationService.GetAnswerStatusParams(item.Status).color btn-fw">
                            <i class="mdi mdi-@applicationService.GetAnswerStatusParams(item.Status).icon"></i>
                        </span>
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" asp-route-userId=@userService.GetUserId(userIdentityId)>
                            <i class="mdi mdi-eye"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

