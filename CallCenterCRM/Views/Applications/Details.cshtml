@model CallCenterCRM.Models.Application
@inject IApplicationService applicationService
@using CallCenterCRM.Interfaces
@inject IUserService userService

@{
    string typeIdentityId = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier";
    string userIdentityId = GetUserClaim(typeIdentityId);
    DateTime currentTime = DateTime.Now;
    var isAuthenticated = User.Identity.IsAuthenticated;

    string GetUserClaim(string type)
    {
        return User.Identities.First().Claims.First(c => c.Type == type).Value;
    }
}

<h1>Подробности</h1>

<div class="row">
    <div class="col-6">
        <h4>Заявление</h4>
        @if (userService.GetUserRole(userIdentityId) == Roles.CrmOperator.GetDisplayName())
        {
            <div class="toggle-selected">
                <a asp-controller="Applications" asp-action="ToggleSelected" asp-route-Id=@Model.Id>
                    <i class="mdi mdi-@(Model.IsSelected ? "star" : "star-outline")"></i>
                </a>
            </div>
        }
        <hr />
        <dl class="row">
            <dt class="col-sm-4">
                Номер обращения
            </dt>
            <dd class="col-sm-8">
                @applicationService.GetAppNumber(Model)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Type)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Type)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.MeaningOfApplication)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.MeaningOfApplication)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ExpireTime)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ExpireTime)
            </dd>
            @if (Model.Comment != null && Model.Comment != "")
            {
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Comment)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Comment)
                </dd>
            }
            @if (Model.AdditionalNote != null && Model.AdditionalNote != "")
            {
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.AdditionalNote)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.AdditionalNote)
                </dd>
            }
            @if (Model.Attachment != null)
            {
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Attachment)
                </dt>
                <dd class="col-sm-8">
                    <a href="~/uploads/@Model.Attachment.Path" target="_blank">@Model.Attachment.OriginName</a>
                </dd>
            }
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Classification)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Classification.Direction)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Recipient)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Recipient.Title)
            </dd>
            @if (userService.GetUserRole(userIdentityId) == Roles.CrmOperator.GetDisplayName())
            {
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Status)
                </dt>
                <dd class="col-sm-8">
                    <span class="app-status btn-rounded btn-inverse-@applicationService.GetStatusForOperator(Model).color btn-fw">
                        <i class="mdi mdi-@applicationService.GetStatusForOperator(Model).icon"></i>
                        @applicationService.GetStatusForOperator(Model).text
                    </span>
                </dd>
            }
            else
            {
                @if (Model.Answer != null && Model.Answer.Status == AnswerStatus.Confirm)
                {
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Answer.Status)
                    </dt>
                    <dd class="col-sm-8">
                        <span class="app-status btn-rounded btn-inverse-@applicationService.GetAnswerStatusParams(Model.Answer.Status).color btn-fw">
                            <i class="mdi mdi-@applicationService.GetAnswerStatusParams(Model.Answer.Status).icon"></i>
                            @Model.Answer.Status.GetDisplayName()
                        </span>
                    </dd>
                }
                else
                {
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Status)
                    </dt>
                    <dd class="col-sm-8">
                        <span class="app-status btn-rounded btn-inverse-@applicationService.GetAppStatusParams(Model.Status).color btn-fw">
                            <i class="mdi mdi-@applicationService.GetAppStatusParams(Model.Status).icon"></i>
                            @Model.Status.GetDisplayName()
                        </span>
                    </dd>

                }
            }
            @if (applicationService.ShowReason(Model, userService.GetUserRole(userIdentityId)))
            {
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Reason)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Reason)
                </dd>
            }
            @*@if((Model.Reason != null || Model.Reason != "")
                && ((Model.Status == ApplicationStatus.RejectOrg && userService.GetUserRole(userIdentityId) != Roles.CrmOperator.GetDisplayName()) ||
                (Model.Status == ApplicationStatus.RejectMod && userService.GetUserRole(userIdentityId) == Roles.CrmOperator.GetDisplayName())))
                {


                }*@
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.UpdatedDate)
            </dd>
        </dl>

    </div>
    @if (Model.Answer != null && Model.Answer.Status == AnswerStatus.Confirm)
    {
        <div class="col-6">
            <h4>Ответ</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.ResponsiblePerson)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.ResponsiblePerson)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.Executor)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.Executor)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.RegisterNumber)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.RegisterNumber)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.Result)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.Result)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.Conclusion)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.Conclusion)
                </dd>
                @if (Model.Answer.Attachment != null)
                {
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Answer.Attachment)
                    </dt>
                    <dd class="col-sm-8">
                        <a href="~/uploads/@Model.Answer.Attachment.Path" target="_blank">@Model.Answer.Attachment.OriginName</a>
                    </dd>
                }

                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.Author)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.Author.Title)
                </dd>

                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Answer.UpdatedDate)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Answer.UpdatedDate)
                </dd>
            </dl>
        </div>
    }

</div>

<div>
    @if (Model.Answer == null)
    {
        @if (userService.GetUserRole(userIdentityId) == Roles.CrmOperator.GetDisplayName())
        {
            @if (Model.Status == ApplicationStatus.SendMod || Model.Status == ApplicationStatus.RejectMod)
            {
                <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary btn-rounded btn-fw">Изменять</a>
            }
        }
        else if (userService.GetUserRole(userIdentityId) == Roles.CrmModerator.GetDisplayName())
        {
            @if (Model.Status == ApplicationStatus.GotMod || Model.Status == ApplicationStatus.Edit || Model.Status == ApplicationStatus.AskDelay)
            {
                @if (userService.HasBranches(userIdentityId) && Model.Status != ApplicationStatus.Delay)
                {
                    @if (Model.Status == ApplicationStatus.AskDelay)
                    {
                        <a asp-action="Delay" asp-route-id="@Model?.Id" class="btn btn-warning btn-rounded btn-fw">Отложить</a>
                        <a asp-action="RejectDelay" asp-route-id="@Model?.Id" class="btn btn-danger btn-rounded btn-fw">Отклонить задержку</a>
                    }
                    else
                    {
                        <a asp-action="SendOrg" asp-route-id="@Model?.Id" asp-route-moderatorId=@userService.GetUserId(userIdentityId) class="btn btn-warning btn-rounded btn-fw">Отправить организацию</a>
                        <a asp-action="RejectMod" asp-route-id="@Model?.Id" class="btn btn-danger btn-rounded btn-fw">Отклонять</a>
                    }
                }
                else
                {
                    <a asp-controller="Answers" asp-action="Create"
       asp-route-applicationId="@Model?.Id" asp-route-authorId=@userService.GetUserId(userIdentityId)
       class="btn btn-success btn-rounded btn-fw">Написание ответа</a>
                    @if (Model.Status != ApplicationStatus.Delay)
                    {
                        <a asp-action="Delay" asp-route-id="@Model?.Id" class="btn btn-warning btn-rounded btn-fw">Отложить</a>
                        <a asp-action="RejectOrg" asp-route-id="@Model?.Id" class="btn btn-danger btn-rounded btn-fw">Отклонять</a>
                    }
                }
            }
            @if(Model.Status == ApplicationStatus.RejectOrg)
            {
                <a asp-action="SendOrg" asp-route-id="@Model?.Id" asp-route-moderatorId=@userService.GetUserId(userIdentityId) class="btn btn-warning btn-rounded btn-fw">Отправить организацию</a>
            }
        }
        else if (userService.GetUserRole(userIdentityId) == Roles.CrmOrganization.GetDisplayName())
        {
            @if (Model.Status == ApplicationStatus.SendOrg || Model.Status == ApplicationStatus.AskDelay 
            || Model.Status == ApplicationStatus.RejectDelay || Model.Status == ApplicationStatus.Delay)
            {
                @if(Model.ExpireTime > currentTime && (Model.Status == ApplicationStatus.SendOrg || Model.Status == ApplicationStatus.Delay))
                {
                    <a asp-controller="Answers" asp-action="Create" asp-route-applicationId="@Model?.Id" 
                        asp-route-authorId=@userService.GetUserId(userIdentityId) class="btn btn-success btn-rounded btn-fw">Написание ответа</a>
                    @if(Model.Status == ApplicationStatus.SendOrg)
                    {
                        <a asp-action="RejectOrg" asp-route-id="@Model?.Id" class="btn btn-danger btn-rounded btn-fw">Отклонять</a>
                    }
                } 
                @if (
                (Model.Status == ApplicationStatus.SendOrg || Model.Status == ApplicationStatus.RejectDelay || Model.Status == ApplicationStatus.Delay) )
                {
                    <a asp-action="AskDelay" asp-route-id="@Model?.Id" class="btn btn-warning btn-rounded btn-fw">Спросите продолжить</a>
                }
            }
        }
    }
    else if (Model.Answer != null && Model.Answer.Status != AnswerStatus.Confirm)
    {
        <a asp-controller="Answers" asp-action="Details" asp-route-id="@Model.Answer.Id" asp-route-userId=@userService.GetUserId(userIdentityId)
        asp-route-actionName="AnswersList">
            Ответ
        </a>
    }
    <a asp-controller="Applications" asp-action=@ViewBag.actionName asp-route-recipientId=@userService.GetUserId(userIdentityId)
        class="btn btn-secondary btn-rounded btn-fw">Назад</a>
</div>

